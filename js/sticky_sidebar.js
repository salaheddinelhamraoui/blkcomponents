!funct
ion () { var d = function (e, i) { function h() { var i, t; this.q = [], this.add = function (i) { this.q.push(i) }, this.call = function () { for (i = 0, t = this.q.length; i < t; i++)this.q[i].call() } } function t(i, t) { if (i.resizedAttached) { if (i.resizedAttached) return void i.resizedAttached.add(t) } else i.resizedAttached = new h, i.resizedAttached.add(t); i.resizeSensor = document.createElement("div"), i.resizeSensor.className = "resize-sensor"; var e = "position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;", o = "position: absolute; left: 0; top: 0; transition: 0s;"; i.resizeSensor.style.cssText = e, i.resizeSensor.innerHTML = '<div class="resize-sensor-expand" style="' + e + '"><div style="' + o + '"></div></div><div class="resize-sensor-shrink" style="' + e + '"><div style="' + o + ' width: 200%; height: 200%"></div></div>', i.appendChild(i.resizeSensor), { fixed: 1, absolute: 1 }[function (i, t) { return i.currentStyle ? i.currentStyle[t] : window.getComputedStyle ? window.getComputedStyle(i, null).getPropertyValue(t) : i.style[t] }(i, "position")] || (i.style.position = "relative"); function s() { r.style.width = d.offsetWidth + 10 + "px", r.style.height = d.offsetHeight + 10 + "px", d.scrollLeft = d.scrollWidth, d.scrollTop = d.scrollHeight, c.scrollLeft = c.scrollWidth, c.scrollTop = c.scrollHeight, n = i.offsetWidth, a = i.offsetHeight } var n, a, d = i.resizeSensor.childNodes[0], r = d.childNodes[0], c = i.resizeSensor.childNodes[1]; c.childNodes[0]; s(); function l(i, t, e) { i.attachEvent ? i.attachEvent("on" + t, e) : i.addEventListener(t, e) } function p() { i.offsetWidth == n && i.offsetHeight == a || i.resizedAttached && i.resizedAttached.call(), s() } l(d, "scroll", p), l(c, "scroll", p) } var o = Object.prototype.toString.call(e), s = "[object Array]" === o || "[object NodeList]" === o || "[object HTMLCollection]" === o || "undefined" != typeof jQuery && e instanceof jQuery || "undefined" != typeof Elements && e instanceof Elements; if (s) for (var n = 0, a = e.length; n < a; n++)t(e[n], i); else t(e, i); this.detach = function () { if (s) for (var i = 0, t = e.length; i < t; i++)d.detach(e[i]); else d.detach(e) } }; d.detach = function (i) { i.resizeSensor && (i.removeChild(i.resizeSensor), delete i.resizeSensor, delete i.resizedAttached) }, "undefined" != typeof module && void 0 !== module.exports ? module.exports = d : window.ResizeSensor = d }(), function (m) { m.fn.theiaStickySidebar = function (i) { var t, e; function o(i, t) { return !0 === i.initialized || !(m("body").width() < i.minWidth) && (function (y, i) { y.initialized = !0, 0 === m("#theia-sticky-sidebar-stylesheet-" + y.namespace).length && m("head").append(m('<style id="theia-sticky-sidebar-stylesheet-' + y.namespace + '">.theiaStickySidebar:after {content: ""; display: table; clear: both;}</style>')); i.each(function () { var i = {}; if (i.sidebar = m(this), i.options = y || {}, i.container = m(i.options.containerSelector), 0 == i.container.length && (i.container = i.sidebar.parent()), i.sidebar.parents(":not(.theia-exception)").css("-webkit-transform", "none"), i.sidebar.css({ position: i.options.defaultPosition, overflow: "visible", "-webkit-box-sizing": "border-box", "-moz-box-sizing": "border-box", "box-sizing": "border-box" }), i.stickySidebar = i.sidebar.find(".theiaStickySidebar"), 0 == i.stickySidebar.length) { var e = /(?:text|application)\/(?:x-)?(?:javascript|ecmascript)/i; i.sidebar.find("script").filter(function (i, t) { return 0 === t.type.length || t.type.match(e) }).remove(), i.stickySidebar = m("<div>").addClass("theiaStickySidebar").append(i.sidebar.children()), i.sidebar.append(i.stickySidebar) } i.marginBottom = parseInt(i.sidebar.css("margin-bottom")), i.paddingTop = parseInt(i.sidebar.css("padding-top")), i.paddingBottom = parseInt(i.sidebar.css("padding-bottom")); var t, o, s, n = i.stickySidebar.offset().top, a = i.stickySidebar.outerHeight(); function g() { i.fixedScrollTop = 0, i.sidebar.css({ "min-height": "1px" }), i.stickySidebar.css({ position: "static", width: "", transform: "none" }) } i.stickySidebar.css("padding-top", 1), i.stickySidebar.css("padding-bottom", 1), n -= i.stickySidebar.offset().top, a = i.stickySidebar.outerHeight() - a - n, 0 == n ? (i.stickySidebar.css("padding-top", 0), i.stickySidebarPaddingTop = 0) : i.stickySidebarPaddingTop = 1, 0 == a ? (i.stickySidebar.css("padding-bottom", 0), i.stickySidebarPaddingBottom = 0) : i.stickySidebarPaddingBottom = 1, i.previousScrollTop = null, i.fixedScrollTop = 0, g(), i.onScroll = function (i) { if (i.stickySidebar.is(":visible")) if (m("body").width() < i.options.minWidth) g(); else { if (i.options.disableOnResponsiveLayouts) if (i.sidebar.outerWidth("none" == i.sidebar.css("float")) + 50 > i.container.width()) return void g(); var t = m(document).scrollTop(), e = "static"; if (t >= i.sidebar.offset().top + (i.paddingTop - i.options.additionalMarginTop)) { var o, s = i.paddingTop + y.additionalMarginTop, n = i.paddingBottom + i.marginBottom + y.additionalMarginBottom, a = i.sidebar.offset().top, d = i.sidebar.offset().top + function (i) { var t = i.height(); return i.children().each(function () { t = Math.max(t, m(this).height()) }), t }(i.container), r = 0 + y.additionalMarginTop; o = i.stickySidebar.outerHeight() + s + n < m(window).height() ? r + i.stickySidebar.outerHeight() : m(window).height() - i.marginBottom - i.paddingBottom - y.additionalMarginBottom; var c = a - t + i.paddingTop, l = d - t - i.paddingBottom - i.marginBottom, p = i.stickySidebar.offset().top - t, h = i.previousScrollTop - t; "fixed" == i.stickySidebar.css("position") && "modern" == i.options.sidebarBehavior && (p += h), "stick-to-top" == i.options.sidebarBehavior && (p = y.additionalMarginTop), "stick-to-bottom" == i.options.sidebarBehavior && (p = o - i.stickySidebar.outerHeight()), p = 0 < h ? Math.min(p, r) : Math.max(p, o - i.stickySidebar.outerHeight()), p = Math.max(p, c), p = Math.min(p, l - i.stickySidebar.outerHeight()); var f = i.container.height() == i.stickySidebar.outerHeight(); e = (f || p != r) && (f || p != o - i.stickySidebar.outerHeight()) ? t + p - i.sidebar.offset().top - i.paddingTop <= y.additionalMarginTop ? "static" : "absolute" : "fixed" } if ("fixed" == e) { var b = m(document).scrollLeft(); i.stickySidebar.css({ position: "fixed", width: S(i.stickySidebar) + "px", transform: "translateY(" + p + "px)", left: i.sidebar.offset().left + parseInt(i.sidebar.css("padding-left")) - b + "px", top: "0px" }) } else if ("absolute" == e) { var u = {}; "absolute" != i.stickySidebar.css("position") && (u.position = "absolute", u.transform = "translateY(" + (t + p - i.sidebar.offset().top - i.stickySidebarPaddingTop - i.stickySidebarPaddingBottom) + "px)", u.top = "0px"), u.width = S(i.stickySidebar) + "px", u.left = "", i.stickySidebar.css(u) } else "static" == e && g(); "static" != e && 1 == i.options.updateSidebarHeight && i.sidebar.css({ "min-height": i.stickySidebar.outerHeight() + i.stickySidebar.offset().top - i.sidebar.offset().top + i.paddingBottom }), i.previousScrollTop = t } }, i.onScroll(i), m(document).on("scroll." + i.options.namespace, (t = i, function () { t.onScroll(t) })), m(window).on("resize." + i.options.namespace, (o = i, function () { o.stickySidebar.css({ position: "static" }), o.onScroll(o) })), "undefined" != typeof ResizeSensor && new ResizeSensor(i.stickySidebar[0], (s = i, function () { s.onScroll(s) })) }) }(i, t), !0) } function S(i) { var t; try { t = i[0].getBoundingClientRect().width } catch (i) { } return void 0 === t && (t = i.width()), t } return (i = m.extend({ containerSelector: "", additionalMarginTop: 0, additionalMarginBottom: 0, updateSidebarHeight: !0, minWidth: 0, disableOnResponsiveLayouts: !0, sidebarBehavior: "modern", defaultPosition: "relative", namespace: "TSS" }, i)).additionalMarginTop = parseInt(i.additionalMarginTop) || 0, i.additionalMarginBottom = parseInt(i.additionalMarginBottom) || 0, o(t = i, e = this) || (console.log("TSS: Body width smaller than options.minWidth. Init is delayed."), m(document).on("scroll." + t.namespace, function (t, e) { return function (i) { o(t, e) && m(this).unbind(i) } }(t, e)), m(window).on("resize." + t.namespace, function (t, e) { return function (i) { o(t, e) && m(this).unbind(i) } }(t, e))), this } }(jQuery);


/*! rangeslider.js - v2.3.0 | (c) 2016 @andreruffert | MIT license | https://github.com/andreruffert/rangeslider.js */
!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "object" == typeof exports ? module.exports = t(require("jquery")) : t(jQuery) }(function (o) { "use strict"; Number.isNaN = Number.isNaN || function (t) { return "number" == typeof t && t != t }; var t, r = "rangeslider", h = 0, a = ((t = document.createElement("input")).setAttribute("type", "range"), "text" !== t.type), l = { polyfill: !0, orientation: "horizontal", isRTL: !1, rangeClass: "rangeslider", disabledClass: "rangeslider--disabled", activeClass: "rangeslider--active", horizontalClass: "rangeslider--horizontal", verticalClass: "rangeslider--vertical", fillClass: "rangeslider__fill", handleClass: "rangeslider__handle", startEvent: ["mousedown", "touchstart", "pointerdown"], moveEvent: ["mousemove", "touchmove", "pointermove"], endEvent: ["mouseup", "touchend", "pointerup"] }, d = { orientation: { horizontal: { dimension: "width", direction: "left", directionStyle: "left", coordinate: "x" }, vertical: { dimension: "height", direction: "top", directionStyle: "bottom", coordinate: "y" } } }; function e(t, i) { var e = function (t) { for (var i, e = [], n = t.parentNode; (i = n) && (0 === i.offsetWidth || 0 === i.offsetHeight || !1 === i.open);)e.push(n), n = n.parentNode; return e }(t), n = e.length, s = [], o = t[i]; function r(t) { void 0 !== t.open && (t.open = !t.open) } if (n) { for (var h = 0; h < n; h++)s[h] = e[h].style.cssText, e[h].style.setProperty ? e[h].style.setProperty("display", "block", "important") : e[h].style.cssText += ";display: block !important", e[h].style.height = "0", e[h].style.overflow = "hidden", e[h].style.visibility = "hidden", r(e[h]); o = t[i]; for (var a = 0; a < n; a++)e[a].style.cssText = s[a], r(e[a]) } return o } function n(t, i) { var e = parseFloat(t); return Number.isNaN(e) ? i : e } function s(t) { return t.charAt(0).toUpperCase() + t.substr(1) } function u(t, i) { if (this.$window = o(window), this.$document = o(document), this.$element = o(t), this.options = o.extend({}, l, i), this.polyfill = this.options.polyfill, this.orientation = this.$element[0].getAttribute("data-orientation") || this.options.orientation, this.onInit = this.options.onInit, this.onSlide = this.options.onSlide, this.onSlideEnd = this.options.onSlideEnd, this.DIMENSION = d.orientation[this.orientation].dimension, this.DIRECTION = this.options.isRTL ? "right" : "left", this.DIRECTION_STYLE = this.options.isRTL ? "right" : "left", this.COORDINATE = d.orientation[this.orientation].coordinate, this.polyfill && a) return !1; this.identifier = "js-" + r + "-" + h++, this.startEvent = this.options.startEvent.join("." + this.identifier + " ") + "." + this.identifier, this.moveEvent = this.options.moveEvent.join("." + this.identifier + " ") + "." + this.identifier, this.endEvent = this.options.endEvent.join("." + this.identifier + " ") + "." + this.identifier, this.toFixed = (this.step + "").replace(".", "").length - 1, this.$fill = o('<div class="' + this.options.fillClass + '" />'), this.$handle = o('<div class="' + this.options.handleClass + '" />'), this.$range = o('<div class="' + this.options.rangeClass + (this.options.isRTL ? " rangeslider-rtl " : "") + " " + this.options[this.orientation + "Class"] + '" id="' + this.identifier + '" />').insertAfter(this.$element).prepend(this.$fill, this.$handle), this.$element.css({ position: "absolute", width: "1px", height: "1px", overflow: "hidden", opacity: "0" }), this.handleDown = o.proxy(this.handleDown, this), this.handleMove = o.proxy(this.handleMove, this), this.handleEnd = o.proxy(this.handleEnd, this), this.init(); var e, n, s = this; this.$window.on("resize." + this.identifier, (e = function () { !function (t, i) { var e = Array.prototype.slice.call(arguments, 2); setTimeout(function () { return t.apply(null, e) }, i) }(function () { s.update(!1, !1) }, 300) }, n = (n = 20) || 100, function () { if (!e.debouncing) { var t = Array.prototype.slice.apply(arguments); e.lastReturnVal = e.apply(window, t), e.debouncing = !0 } return clearTimeout(e.debounceTimeout), e.debounceTimeout = setTimeout(function () { e.debouncing = !1 }, n), e.lastReturnVal })), this.$document.on(this.startEvent, "#" + this.identifier + ":not(." + this.options.disabledClass + ")", this.handleDown), this.$element.on("change." + this.identifier, function (t, i) { if (!i || i.origin !== s.identifier) { var e = t.target.value, n = s.getPositionFromValue(e); s.setPosition(n) } }) } return u.prototype.init = function () { this.update(!0, !1), this.onInit && "function" == typeof this.onInit && this.onInit() }, u.prototype.update = function (t, i) { (t = t || !1) && (this.min = n(this.$element[0].getAttribute("min"), 0), this.max = n(this.$element[0].getAttribute("max"), 100), this.value = n(this.$element[0].value, Math.round(this.min + (this.max - this.min) / 2)), this.step = n(this.$element[0].getAttribute("step"), 1)), this.handleDimension = e(this.$handle[0], "offset" + s(this.DIMENSION)), this.rangeDimension = e(this.$range[0], "offset" + s(this.DIMENSION)), this.maxHandlePos = this.rangeDimension - this.handleDimension, this.grabPos = this.handleDimension / 2, this.position = this.getPositionFromValue(this.value), this.$element[0].disabled ? this.$range.addClass(this.options.disabledClass) : this.$range.removeClass(this.options.disabledClass), this.setPosition(this.position, i) }, u.prototype.handleDown = function (t) { if (t.preventDefault(), this.$document.on(this.moveEvent, this.handleMove), this.$document.on(this.endEvent, this.handleEnd), this.$range.addClass(this.options.activeClass), !(-1 < (" " + t.target.className + " ").replace(/[\n\t]/g, " ").indexOf(this.options.handleClass))) { var i = this.getRelativePosition(t), e = this.$range[0].getBoundingClientRect()[this.DIRECTION], n = this.getPositionFromNode(this.$handle[0]) - e, s = "vertical" === this.orientation ? this.maxHandlePos - (i - this.grabPos) : i - this.grabPos; this.setPosition(s), n <= i && i < n + this.handleDimension && (this.grabPos = i - n) } }, u.prototype.handleMove = function (t) { t.preventDefault(); var i = this.getRelativePosition(t), e = "vertical" === this.orientation ? this.maxHandlePos - (i - this.grabPos) : i - this.grabPos; this.setPosition(e) }, u.prototype.handleEnd = function (t) { t.preventDefault(), this.$document.off(this.moveEvent, this.handleMove), this.$document.off(this.endEvent, this.handleEnd), this.$range.removeClass(this.options.activeClass), this.$element.trigger("change", { origin: this.identifier }), this.onSlideEnd && "function" == typeof this.onSlideEnd && this.onSlideEnd(this.position, this.value) }, u.prototype.cap = function (t, i, e) { return t < i ? i : e < t ? e : t }, u.prototype.setPosition = function (t, i) { var e, n; void 0 === i && (i = !0), e = this.getValueFromPosition(this.cap(t, 0, this.maxHandlePos)), n = this.getPositionFromValue(e), this.$fill[0].style[this.DIMENSION] = n + this.grabPos + "px", this.$handle[0].style[this.DIRECTION_STYLE] = n + "px", this.setValue(e), this.position = n, this.value = e, i && this.onSlide && "function" == typeof this.onSlide && this.onSlide(n, e) }, u.prototype.getPositionFromNode = function (t) { for (var i = 0; null !== t;)i += t.offsetLeft, t = t.offsetParent; return i }, u.prototype.getRelativePosition = function (t) { var i = s(this.COORDINATE), e = this.$range[0].getBoundingClientRect()[this.DIRECTION], n = 0; return void 0 !== t.originalEvent["client" + i] ? n = t.originalEvent["client" + i] : t.originalEvent.touches && t.originalEvent.touches[0] && void 0 !== t.originalEvent.touches[0]["client" + i] ? n = t.originalEvent.touches[0]["client" + i] : t.currentPoint && void 0 !== t.currentPoint[this.COORDINATE] && (n = t.currentPoint[this.COORDINATE]), this.options.isRTL ? e - n : n - e }, u.prototype.getPositionFromValue = function (t) { var i; return i = (t - this.min) / (this.max - this.min), Number.isNaN(i) ? 0 : i * this.maxHandlePos }, u.prototype.getValueFromPosition = function (t) { var i, e; return i = t / (this.maxHandlePos || 1), e = this.step * Math.round(i * (this.max - this.min) / this.step) + this.min, Number(e.toFixed(this.toFixed)) }, u.prototype.setValue = function (t) { t === this.value && "" !== this.$element[0].value || this.$element.val(t).trigger("input", { origin: this.identifier }) }, u.prototype.destroy = function () { this.$document.off("." + this.identifier), this.$window.off("." + this.identifier), this.$element.off("." + this.identifier).removeAttr("style").removeData("plugin_" + r), this.$range && this.$range.length && this.$range[0].parentNode.removeChild(this.$range[0]) }, o.fn[r] = function (e) { var n = Array.prototype.slice.call(arguments, 1); return this.each(function () { var t = o(this), i = t.data("plugin_" + r); i || t.data("plugin_" + r, i = new u(this, e)), "string" == typeof e && i[e].apply(i, n) }) }, "rangeslider.js is available in jQuery context e.g $(selector).rangeslider(options);" });
(function ($) {

    "use strict";

    // Sticky sidebar
    $('#sidebar_fixed').theiaStickySidebar({
        minWidth: 991,
        updateSidebarHeight: true,
        additionalMarginTop: 25
    });

    // Button show/hide map
    $(".btn_map").on("click", function () {
        var el = $(".btn_map_txt");
        el.text() == el.data("text-swap") ? el.text(el.data("text-original")) : el.text(el.data("text-swap"));
        $('html, body').animate({
            scrollTop: $("body").offset().top
        }, 600);
    });

    // Range slider
    $('input[type="range"]').rangeslider({
        polyfill: false,
        onInit: function () {
            this.output = $(".distance span").html(this.$element.val());
        },
        onSlide: function (
            position, value) {
            this.output.html(value);
        }
    });

    //Filters collapse
    var $headingFilters = $('.filter_type h4 a');
    $headingFilters.on('click', function () {
        $(this).toggleClass('opened');
    })
    $headingFilters.on('click', function () {
        $(this).toggleClass('closed');
    });

    //Filters on mobile
    $('a.open_filters').on("click", function () {
        $('.filter_col').toggleClass('show');
        $('main').toggleClass('freeze');
        $('.layer').toggleClass('layer-is-visible');
    });
})(window.jQuery); 